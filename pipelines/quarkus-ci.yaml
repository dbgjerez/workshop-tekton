apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: quarkus-ci
spec:
  workspaces:
    - name: source
    - name: scratch
    - name: git-credentials
  params:
    - name: repo-url
      description: Git repository url
    - name: revision
      description: Revision to use
    - name: src
      description: Source code folder
    - name: image-name
      description: Name of the image result
    - name: container-file
      description: container runtime file
    - name: skip-image-push
      description: Skip image push
  tasks:

  - name: clone
    taskRef:
      name: git-cli
      kind: ClusterTask
    params:
      - name: GIT_USER_NAME
        value: gogs
      - name: GIT_USER_EMAIL
        value: dborrego@redhat.com
      - name: GIT_SCRIPT
        value: |
          rm -rf app-quarkus
          git clone $(params.repo-url)
    workspaces:
      - name: source
        workspace: source
      - name: basic-auth
        workspace: git-credentials

  # - name: clone
  #   taskRef:
  #     name: git-clone
  #     kind: ClusterTask
  #   params:
  #     - name: url
  #       value: $(params.repo-url)
  #     - name: revision
  #       value: $(params.revision)
  #     - name: src
  #       value: $(params.src)
  #     - name: deleteExisting
  #       value: 'true'
  #   workspaces:
  #     - name: output
  #       workspace: source
  #     - name: basic-auth
  #       workspace: git-credentials


  # - name: test
  #   taskRef:
  #     name: maven
  #     kind: ClusterTask
  #   runAfter:
  #     - clone
  #   params:
  #     - name: MAVEN_IMAGE
  #       value: 'maven:3-openjdk-17'
  #     - name: GOALS
  #       value: ['clean', 'verify']
  #     - name: CONTEXT_DIR
  #       value: $(params.src)
  #   workspaces:
  #     - name: source
  #       workspace: source
  #     - name: maven-settings
  #       workspace: scratch

  - name: extract-app-version
    taskRef:
      name: extract-version-pom
    runAfter:
      - clone
    params:
      - name: context
        value: $(params.src)
    workspaces:
      - name: source
        workspace: source

  - name: update-mvn-version
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter:
      - extract-app-version
    params:
      - name: MAVEN_IMAGE
        value: 'maven:3-openjdk-17'
      - name: CONTEXT_DIR
        value: $(params.src)
      - name: GOALS
        value: 
          - versions:set
          - -DnewVersion=$(tasks.extract-app-version.results.app-version)
    workspaces:
      - name: source
        workspace: source
      - name: maven-settings
        workspace: scratch

  - name: update-git-code
    taskRef:
      name: git-cli
      kind: ClusterTask
    runAfter:
      - update-mvn-version
    params:
      - name: GIT_USER_NAME
        value: gogs
      - name: GIT_USER_EMAIL
        value: dborrego@redhat.com
      - name: GIT_SCRIPT
        value: |
          ls -la
          git remote set-url origin $(params.repo-url)
          sleep 10000
          git remote -v
          git checkout main
          git pull
          git status
          git add pom.xml
          git status
          git commit -m 'new version'
          git status
          git push -u origin HEAD
    workspaces:
      - name: source
        workspace: source
      - name: basic-auth
        workspace: git-credentials

  - name: build
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter:
      - update-git-code
    params:
      - name: MAVEN_IMAGE
        value: 'maven:3-openjdk-17'
      - name: CONTEXT_DIR
        value: $(params.src)
      - name: GOALS
        value: ['clean', 'package', '-DskipTests']
    workspaces:
      - name: source
        workspace: source
      - name: maven-settings
        workspace: scratch
         
  - name: build-image
    taskRef:
      name: buildah
      kind: ClusterTask
    runAfter:
      - build
    params:
      - name: IMAGE
        value: $(params.image-name):$(tasks.extract-app-version.results.app-version)
      - name: DOCKERFILE
        value: $(params.container-file)
      - name: SKIP_PUSH
        value: $(params.skip-image-push)
      - name: CONTEXT
        value: $(params.src)
      - name: TLSVERIFY
        value: "false"
    workspaces:
      - name: source
        workspace: source

  - name: update-deploy-dev
    taskRef:
      name: git-cli
      kind: ClusterTask
    runAfter:
      - build-image
    params:
      - name: GIT_SCRIPT
        value: |
          git clone http://gogs.gogs.svc.cluster.local:3000/gogs/app-quarkus-config.git
          cd app-quarkus-config
          sed -i "s/version:.*/version: $(tasks.extract-app-version.results.app-version)/g" dev.values.yaml
          git add dev.values.yaml
          git commit -m 'bot update dev env'
          git push
    workspaces:
      - name: source
        workspace: source
      - name: basic-auth
        workspace: git-credentials