apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gogs-init-admin
spec:
  params:
    - name: GOGS_USER
      description: Gogs admin user
      default: "gogs"
    - name: GOGS_PASSWORD
      description: Gogs admin password
      default: "gogs"
    - name: GOGS_NAMESPACE
      description: Gogs installation namespace
      default: "gogs"
    - name: TEKTON_NAMESPACE
      description: Tekton installation namespace
      default: "tekton"
  steps:
   - name: init-admin
     image: quay.io/siamaksade/python-oc
     script: |
      #!/usr/bin/env python3

      import os
      import requests 

      gogs_user = "$(params.GOGS_USER)"
      gogs_pwd = "$(params.GOGS_PASSWORD)"
      gogs_ns = "$(params.GOGS_NAMESPACE)"
      tekton_ns = "$(params.TEKTON_NAMESPACE)"
      webhookURL = "http://" + os.popen('oc get route gogs-webhook -n ' + tekton_ns + ' -o template --template="{{.spec.host}}"').read()
      gogsURL = "http://" + os.popen('oc get svc gogs -n ' + gogs_ns + ' -o template --template="{{.spec.clusterIP}}"').read() + ":3000"
      # create admin user
      data_user = {
      'user_name': gogs_user,
      'password': gogs_pwd,
      'retype': gogs_pwd,
      'email': 'admin@gogs.com'
      }
      resp = requests.post(url = gogsURL + "/user/sign_up", data = data_user) 
      if resp.status_code != 200:
        print("Error creating Gogs admin (status code: {})".format(resp.status_code))
        print(resp.content)
      else:
        print("Created admin user {}:{}".format(gogs_user, gogs_pwd))